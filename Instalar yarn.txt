Instalar yarn
npm install --global yarn
yarn --version
-yarn create vite
cd app
yarn
yarn dev

-----Instalar Tailwind-----
npm create vite@latest my-project -- --template react
cd my-project
npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init -p
/** @type {import('tailwindcss').Config} */
export default {
  content: [
    "./index.html",
    "./src/**/*.{js,ts,jsx,tsx}",
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}
-------index.css----->
@tailwind base;
@tailwind components;
@tailwind utilities;
npm run dev

import PropTypes from 'prop-types';
yarn add prop-types
yarn build

----EN EL TERMINAL--------
-----PARA PRODUCCION, cd dist, http-server -o ----
<FirstApp title="123 no" subtitle={31415} />
-----EN LAS PROPS string es "" y float {1212}

npx create-react-app nombre-app --ESTO SOLO FUNCIONA EN NPM
npm start
npm run build
npm test
npm run eject

rafc para export App
imr import react

------INICIO REACT---------

import React from "react";// se importa el react opcional y el dom client
import ReactDOM from "react-dom/client";

function App() { //se inicia una funcion en la app que es la global
  return <h1>Hola Mundo!!!</h1>;//se retorna un valor dentro de la funcion
}

//Se renderiza el DOM obteniendo el id del root, dentro del stric mode cargar la App
ReactDOM.createRoot(document.getElementById("root")).render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);


-----MAIN SIEMPRE ES IMPORTANTE----
---SIEMPRE EXPORTAR LA FUNCION DESDE EL jsx 
-----HIJO HASTA EL main.jsx PADRE
export function App() {
  return <h1>Hola Mundo!!!</h1>;
}

-------PARA COLOCAR VARIOS ELEMENROS DENTRO DEL RETURN <></>----
--------SIEMPRE PONER UN RETURN EN LA FUNCION/COMPONENTE-----
export const FirstApp = () => {
  return (
    <>
        <h1>Alberto</h1>;
        <p>hola soy un parrafo</p>
    </>
  )
  
};

----IMPORT STYLES---
import './index.css'
import React from "react";